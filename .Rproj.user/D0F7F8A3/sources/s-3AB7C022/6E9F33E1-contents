#' Team 5
#'
#' Converts the geometry section of a shape file to latitude-longitude format
#' @export team_5
#' @param file Shape file path, extension .shp. Must contain a geometry column.
#' @param tolerance Tolerance level for thinning shape file. A percentage between 0 and 1.
#' @return The structure of the original file with the geometry column converted to long-lat format.
#'
#' @import purrr
#' @import assertthat

library(sf)

Mat2Df <- function(Mat){
  long <- Mat[,1]
  lat <- Mat[,2]
  order <- 1:nrow(Mat)
  # group <- rep(rnorm(1),nrow(Mat))
  df <- data.frame(long=long,lat=lat,order=order)
  return(df)
}

newgeo <- function(multpoly){
  lst <- flatten(multpoly) %>% purrr::map(.f = Mat2Df) %>%
    bind_rows(.id = "group")
  newdf <- lst %>% select(-group, -order, everything())
  newdf$group <- as.factor(newdf$group)
  return(newdf)
}

team_5 <- function(file, tolerance = 0.05){
  assertthat::assert_that(assertthat::has_extension(file, "shp"))
  sh_orig <- sf::read_sf(as.character(file))
  shp_thin <- maptools::thinnedSpatialPoly(as(file, "Spatial"),
                               tolerance = tolerance, minarea = 0.001,
                               topologyPreserve = TRUE)
  sf_thin <- sf::st_as_sf(shp_thin)

  new_sf <- sf_thin %>% transmute(data = geometry %>%
                                    purrr::map(.f = function(x){newgeo(x)}))
  return(new_sf)
}
